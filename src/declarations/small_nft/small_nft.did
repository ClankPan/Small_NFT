type TokenMetadata = record {attributes: opt vec Attribute;};
type TokenID = nat;
type Small_NFT = 
 service {
   latestTokenID: () -> (Result_2) query;
   mint: (principal, opt TokenMetadata) -> (TokenID);
   ownerOf: (TokenID) -> (Result_1) query;
   transfer: (principal, TokenID) -> (Result);
 };
type Result_2 = 
 variant {
   err: text;
   ok: nat;
 };
type Result_1 = 
 variant {
   err: Errors;
   ok: text;
 };
type Result = 
 variant {
   err: Errors;
   ok: Okays;
 };
type Okays = 
 variant {
   IsSuccess: nat;
   canTransfer: text;
 };
type Errors = 
 variant {
   alreadyExist;
   notFoundTokenInfo;
 };
type Attribute = 
 record {
   key: text;
   value: text;
 };
service : () -> Small_NFT
